<div class="outputTextbox" id="output"></div>

<script>
  function puts(header, headerColor, message) {
    var pre = document.createElement("p");
    pre.style.wordWrap = "break-word";
    pre.innerHTML = '<span style="color: ' + headerColor + '">' + header + ':</span> ' + message;
    $('#output').append(pre);
  };

  <!-- TODO: get character name from account -->
  $.get("<%= raw token_path(@conn, :entity_token, map: @map, char_name: @char) %>")
   .then(function(data) {
    if (data.status === "ok") {
      puts("Message", "Green", JSON.stringify(data.message));
      puts("Client", "DarkGreen", JSON.stringify(data.client_id));
      puts("Entity", "DarkGreen", JSON.stringify(data.entity_id));
      puts("Token", "DarkGreen", JSON.stringify(data.entity_token));
      init("<%= @map %>", data.client_id, data.entity_id, data.entity_token)
    } else {
      $(location).attr('href','<%= page_path(@conn, :index) %>');
    }
  });

  function init(map, client_id, entity_id, entity_token) {
    var socket = new Phoenix.Socket("/socket");
    socket.connect({client_id: client_id, entity_token: entity_token, map: map});

    socket.channel("entity:" + map)
    .join()
    .receive("join:ok", function(payload) {
      puts("[entity] Joined", "Blue", JSON.stringify(payload))
    })
    .receive("entity:add", function(payload) {
      puts("[entity] Got", "Red", JSON.stringify(payload))
    })
    .receive("entity:remove", function(payload) {
      puts("[entity] Got", "Red", JSON.stringify(payload))
    });

    socket.channel("group:" + map)
    .join()
    .receive("join:ok", function(payload) {
      puts("[group] Joined", "Blue", JSON.stringify(payload))
    });


    socket.channel("skill:" + map)
    .join()
    .receive("join:ok", function(payload) {
      puts("[skill] Joined", "Blue", JSON.stringify(payload))
      //channel.send("skillbar:set", {slot: 1, id: 3});
    })
    .receive("skillbar:ok", function(payload) {
      puts("[skill] Got", "Red", JSON.stringify(payload))
    });


    var mvt_chan = socket.channel("movement:" + map);
    mvt_chan.join().receive("ok", function(payload) {
      puts("[movement] Joined", "Blue", JSON.stringify(payload))
    });
    mvt_chan.on("update", function(payload) {
      puts("[movement] Got", "Red", JSON.stringify(payload))
    });

    socket.channel("social:" + map + ":group:" + entity_id)
    .join()
    .receive("join:ok", function(payload) {
      puts("[social] Joined", "Blue", JSON.stringify(payload))
    });
  };

</script>
